cat <<EOF | kubectl apply -f -
apiVersion: karpenter.sh/v1
kind: NodePool
metadata:
  name: default
spec:
  template:
    metadata:
      labels:
        intent: apps
    spec:
      nodeClassRef:
        group: karpenter.k8s.aws
        kind: EC2NodeClass
        name: default

      requirements:
        - key: karpenter.sh/capacity-type
          operator: In
          values: ["on-demand"]
        - key: karpenter.k8s.aws/instance-size
          operator: NotIn
          values: [nano, micro, small, medium, large]
        - key: "karpenter.k8s.aws/instance-generation"
          operator: Gt
          values: ["2"]
  limits:
    cpu: 1000
    memory: 1000Gi
  disruption:
    consolidationPolicy: WhenEmptyOrUnderutilized
    consolidateAfter: 0s
    budgets:
      - nodes: "0"
        reasons:
          - "Underutilized"
      - nodes: "100%"
EOF


cat <<EOF > inflate-multiaz.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: inflate-multiaz
spec:
  replicas: 10
  selector:
    matchLabels:
      app: inflate-multiaz
  template:
    metadata:
      labels:
        app: inflate-multiaz
    spec:
      nodeSelector:
        intent: apps
      containers:
      - image: public.ecr.aws/eks-distro/kubernetes/pause:3.2
        name: inflate-multiaz
        resources:
          requests:
            cpu: "2"
            memory: "6Gi"
      topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              app: inflate-multiaz
          maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: DoNotSchedule
          minDomains: 3
EOF
kubectl apply -f inflate-multiaz.yaml
