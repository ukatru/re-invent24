{
    "name": "hub-dev-1-aws-loadbalancer-controller-role",
    "description": "I am role for AWS LoadBalancer Controller",
    "type": "role",
    "account_id": "891377117312",
    "trust_policies": [
        {
            "sid": "EKSClusterAssumeRole",
            "effect": "Allow",
            "actions": ["sts:AssumeRoleWithWebIdentity"],
            "principals": {
               "Federated": [
                  "arn:aws:iam::058264154009:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/9532DED39BAE65B29C242EABE2470C18"
                    ]
            },
            "conditions": [
                {
                    "test": "StringEquals",
                    "variable": "oidc.eks.us-west-2.amazonaws.com/id/9532DED39BAE65B29C242EABE2470C18:sub",
                    "values": ["system:serviceaccount:kube-system:aws-load-balancer-controller-sa"]
                },
                {
                    "test": "StringEquals",
                    "variable": "oidc.eks.us-west-2.amazonaws.com/id/9532DED39BAE65B29C242EABE2470C18:aud",
                    "values": ["sts.amazonaws.com"]
                }
            ]
        }
    ],
    "custom_policies": [
        {
            "actions": ["iam:CreateServiceLinkedRole"],
            "conditions": [
                {
                    "test": "StringEquals",
                    "variable": "iam:AWSServiceName",
                    "values": ["elasticloadbalancing.amazonaws.com"]
                }
            ],
            "effect": "Allow",
            "resources": ["*"]
        },
        {
            "actions": [
                "elasticloadbalancing:DescribeTargetHealth",
                "elasticloadbalancing:DescribeTargetGroups",
                "elasticloadbalancing:DescribeTargetGroupAttributes",
                "elasticloadbalancing:DescribeTags",
                "elasticloadbalancing:DescribeSSLPolicies",
                "elasticloadbalancing:DescribeRules",
                "elasticloadbalancing:DescribeLoadBalancers",
                "elasticloadbalancing:DescribeLoadBalancerAttributes",
                "elasticloadbalancing:DescribeListeners",
                "elasticloadbalancing:DescribeListenerCertificates",
                "ec2:GetCoipPoolUsage",
                "ec2:DescribeVpcs",
                "ec2:DescribeVpcPeeringConnections",
                "ec2:DescribeTags",
                "ec2:DescribeSubnets",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DescribeInternetGateways",
                "ec2:DescribeInstances",
                "ec2:DescribeCoipPools",
                "ec2:DescribeAvailabilityZones",
                "ec2:DescribeAddresses",
                "ec2:DescribeAccountAttributes"
            ],
            "effect": "Allow",
            "resources": ["*"]
        },
        {
            "actions": [
                "wafv2:GetWebACLForResource",
                "wafv2:GetWebACL",
                "wafv2:DisassociateWebACL",
                "wafv2:AssociateWebACL",
                "waf-regional:GetWebACLForResource",
                "waf-regional:GetWebACL",
                "waf-regional:DisassociateWebACL",
                "waf-regional:AssociateWebACL",
                "shield:GetSubscriptionState",
                "shield:DescribeProtection",
                "shield:DeleteProtection",
                "shield:CreateProtection",
                "iam:ListServerCertificates",
                "iam:GetServerCertificate",
                "cognito-idp:DescribeUserPoolClient",
                "acm:ListCertificates",
                "acm:DescribeCertificate"
            ],
            "effect": "Allow",
            "resources": ["*"]
        },
        {
            "actions": [
                "ec2:RevokeSecurityGroupIngress",
                "ec2:AuthorizeSecurityGroupIngress"
            ],
            "effect": "Allow",
            "resources": ["*"]
        },
        {
            "actions": ["ec2:CreateSecurityGroup"],
            "effect": "Allow",
            "resources": ["*"]
        },
        {
            "actions": ["ec2:CreateTags"],
            "conditions": [
                {
                    "test": "Null",
                    "variable": "aws:RequestTag/elbv2.k8s.aws/cluster",
                    "values": ["false"]
                },
                {
                    "test": "StringEquals",
                    "variable": "ec2:CreateAction",
                    "values": ["CreateSecurityGroup"]
                }
            ],
            "effect": "Allow",
            "resources": ["arn:aws:ec2:*:*:security-group/*"]
        },
        {
            "actions": [
                "ec2:DeleteTags",
                "ec2:CreateTags"
            ],
            "conditions": [
                {
                    "test": "Null",
                    "variable": "aws:RequestTag/elbv2.k8s.aws/cluster",
                    "values": ["true"]
                },
                {
                    "test": "Null",
                    "variable": "aws:ResourceTag/elbv2.k8s.aws/cluster",
                    "values": ["false"]
                }
            ],
            "effect": "Allow",
            "resources": ["arn:aws:ec2:*:*:security-group/*"]
        },
        {
            "actions": [
                "ec2:RevokeSecurityGroupIngress",
                "ec2:DeleteSecurityGroup",
                "ec2:AuthorizeSecurityGroupIngress"
            ],
            "conditions": [
                {
                    "test": "Null",
                    "variable": "aws:ResourceTag/elbv2.k8s.aws/cluster",
                    "values": ["false"]
                }
            ],
            "effect": "Allow",
            "resources": ["*"]
        },
        {
            "actions": [
                "elasticloadbalancing:CreateTargetGroup",
                "elasticloadbalancing:CreateLoadBalancer"
            ],
            "conditions": [
                {
                    "test": "Null",
                    "variable": "aws:RequestTag/elbv2.k8s.aws/cluster",
                    "values": ["false"]
                }
            ],
            "effect": "Allow",
            "resources": ["*"]
        },
        {
            "actions": [
                "elasticloadbalancing:DeleteRule",
                "elasticloadbalancing:DeleteListener",
                "elasticloadbalancing:CreateRule",
                "elasticloadbalancing:CreateListener"
            ],
            "effect": "Allow",
            "resources": ["*"]
        },
        {
            "actions": [
                "elasticloadbalancing:RemoveTags",
                "elasticloadbalancing:AddTags"
            ],
            "conditions": [
                {
                    "test": "Null",
                    "variable": "aws:RequestTag/elbv2.k8s.aws/cluster",
                    "values": ["true"]
                },
                {
                    "test": "Null",
                    "variable": "aws:ResourceTag/elbv2.k8s.aws/cluster",
                    "values": ["false"]
                }
            ],
            "effect": "Allow",
            "resources": [
                "arn:aws:elasticloadbalancing:*:*:targetgroup/*/*",
                "arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*",
                "arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*"
            ]
        },
        {
            "actions": [
                "elasticloadbalancing:RemoveTags",
                "elasticloadbalancing:AddTags"
            ],
            "effect": "Allow",
            "resources": [
                "arn:aws:elasticloadbalancing:*:*:listener/net/*/*/*",
                "arn:aws:elasticloadbalancing:*:*:listener/app/*/*/*",
                "arn:aws:elasticloadbalancing:*:*:listener-rule/net/*/*/*",
                "arn:aws:elasticloadbalancing:*:*:listener-rule/app/*/*/*"
            ]
        },
        {
            "actions": [
                "elasticloadbalancing:SetSubnets",
                "elasticloadbalancing:SetSecurityGroups",
                "elasticloadbalancing:SetIpAddressType",
                "elasticloadbalancing:ModifyTargetGroupAttributes",
                "elasticloadbalancing:ModifyTargetGroup",
                "elasticloadbalancing:ModifyLoadBalancerAttributes",
                "elasticloadbalancing:DeleteTargetGroup",
                "elasticloadbalancing:DeleteLoadBalancer"
            ],
            "conditions": [
                {
                    "test": "Null",
                    "variable": "aws:ResourceTag/elbv2.k8s.aws/cluster",
                    "values": ["false"]
                }
            ],
            "effect": "Allow",
            "resources": ["*"]
        },
        {
            "actions": ["elasticloadbalancing:AddTags"],
            "conditions": [
                {
                    "test": "Null",
                    "variable": "aws:RequestTag/elbv2.k8s.aws/cluster",
                    "values": ["false"]
                },
                {
                    "test": "StringEquals",
                    "variable": "elasticloadbalancing:CreateAction",
                    "values": ["CreateTargetGroup", "CreateLoadBalancer"]
                }
            ],
            "effect": "Allow",
            "resources": [
                "arn:aws:elasticloadbalancing:*:*:targetgroup/*/*",
                "arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*",
                "arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*"
            ]
        },
        {
            "actions": [
                "elasticloadbalancing:RegisterTargets",
                "elasticloadbalancing:DeregisterTargets"
            ],
            "effect": "Allow",
            "resources": ["arn:aws:elasticloadbalancing:*:*:targetgroup/*/*"]
        },
        {
            "actions": [
                "elasticloadbalancing:SetWebAcl",
                "elasticloadbalancing:RemoveListenerCertificates",
                "elasticloadbalancing:ModifyRule",
                "elasticloadbalancing:ModifyListener",
                "elasticloadbalancing:AddListenerCertificates"
            ],
            "effect": "Allow",
            "resources": ["*"]
        }
    ]
}